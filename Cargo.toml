[package]
name = "raytracing"
version = "0.1.0"
authors = ["Boshen"]
edition = "2024"

[lints.clippy]
all = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
# restriction
dbg_macro = "warn"
todo = "warn"
unimplemented = "warn"
allow_attributes = "warn"
# I like the explicitness of this rule as it removes confusion around `clone`.
# This increases readability, avoids `clone` mindlessly and heap allocating by accident.
clone_on_ref_ptr = "warn"
# These two are mutually exclusive, I like `mod.rs` files for better fuzzy searches on module entries.
self_named_module_files = "warn" # "-Wclippy::mod_module_files"
empty_drop = "warn"
empty_structs_with_brackets = "warn"
exit = "warn"
filetype_is_file = "warn"
get_unwrap = "warn"
impl_trait_in_params = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
rest_pat_in_fully_bound_structs = "warn"
unnecessary_safety_comment = "warn"
undocumented_unsafe_blocks = "warn"
infinite_loop = "warn"

many_single_char_names = "allow"

[dependencies]
num-integer = "0.1.46"
image = "0.25.5"
nalgebra = "0.33.2"
rayon = "1.10.0"
rand = "0.9.0"
tobj = "4.0.2"
bpaf = { version = "0.9.15", features = ["derive"] }

criterion2 = { version = "3.0.0", default-features = false, optional = true }

[target.'cfg(all(not(target_env = "msvc"), not(target_os = "windows")))'.dependencies]
jemallocator = { version = "0.5.4" }

[target.'cfg(target_os = "windows")'.dependencies]
mimalloc = { version = "0.1.43" }

[features]
codspeed = ["criterion2/codspeed"]

[[bench]]
name = "bench_raytracing"
harness = false
required-features = ["codspeed"]

[profile.release]
# Configurations explicitly listed here for clarity.
# Using the best options for performance.
opt-level = 3
lto = "fat"
codegen-units = 1
strip = "symbols" # Set to `false` for debug information
debug = false # Set to `true` for debug information
panic = "abort" # Let it crash and force ourselves to write safe Rust
